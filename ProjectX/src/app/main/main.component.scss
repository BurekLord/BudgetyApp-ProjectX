.main {
    height: 65vh;
    margin: 10vh;
    // define displey of type grid
    display: grid;
    // define a gap width between grid cells in all directions
    grid-gap: 10vh;

    justify-items: stretch;

    position: relative;

    // how many grid rows? 3 and 1fr means they are all the same size
    grid-template-rows: repeat(3, minmax(1fr, 1fr));
    // how many grid columns? 2 and 1fr means they are all the same size
    grid-template-columns: repeat(2, minmax(1fr, 1fr));

    // a shortcut to position the grid elements. imagine this as a matrix of fields 3x2
    grid-template-areas: "categories balance"
        "categories main-input"
        "statistic statistic";
}

// set grid-area nema for the grid-template-areas, and the magic happenes
.categories {
    grid-area: categories;
}

.balance {
    grid-area: balance;
}

.main-input {
    grid-area: main-input;
}

.statistic {
    grid-area: statistic;
}

// second way to define position of the elements in the grid is by grid indexes 
.login .setup {
    grid-row: 1/6;
    grid-column: 1/4;
}
